#!/usr/bin/env ruby
#
# Test raw byte sequences coming from the keyboard.
#

require_relative '../lib/mini_term'

exit_key = MiniTerm.windows? ? "ctrl-z" : "alt-z"

puts "Testing Mapped Keyboard input. Press #{exit_key} to quit."
MiniTerm.open

# Check to see if no map is to be loaded.
no_map = ARGV[0] == '--no-map'

# Load the Windows mapping.
MiniTerm.add_map(:windows) do |map|

  unless no_map

    xeo = MiniTerm::PREFIX # Make local copy for brevity.

    map[" ".."~"] = :insert_text

    #Left Arrows
    map["\x00K"] = :go_left
    map[xeo+"K"] = :go_left

    map["\x00s"] = :word_left
    map[xeo+"s"] = :word_left

    #Right Arrows
    map["\x00M"] = :go_right
    map[xeo+"M"] = :go_right

    map["\x00t"] = :word_right
    map[xeo+"t"] = :word_right

    #Up Arrows
    map["\x00H"] = :previous_history
    map[xeo+"H"] = :previous_history

    #Down Arrows
    map["\x00P"] = :next_history
    map[xeo+"P"] = :next_history

    #The Home keys
    map["\x00G"] = :go_home
    map[xeo+"G"] = :go_home

    #The End keys
    map["\x00O"] = :go_end
    map[xeo+"O"] = :go_end

    #The Backspace key
    map["\x08"]  = :delete_left

    #The Delete keys
    map["\x7F"]  = :delete_right
    map["\x00S"] = :delete_right
    map[xeo+"S"] = :delete_right

    #Auto-completion.
    map["\t"]    = :auto_complete

    #The Enter key
    map["\x0D"]  = :enter

    #The Escape key
    map["\x1B"]  = :cancel
  end

  #End of Input
  map["\x1A"]  = :end_of_input
end

loop do
  mapped = MiniTerm.get_mapped_char
  puts "action = #{mapped[0].inspect}, text = #{mapped[1].chars.inspect}"
  break if mapped[0] == :end_of_input
end

MiniTerm.close
puts
puts
