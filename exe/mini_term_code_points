#!/usr/bin/env ruby
#
# Sample the first 65536 code points.
#

# Compute the range of code points to be displayed.
last_code, first_code = ARGV.map(&:hex).reverse
first_code ||= 32
last_code  ||= 65536
last_code = 65536 if last_code > 65536

puts "Code points in the range: #{first_code}...#{last_code}"

# Compute the 64 element lines to be displayed.
first_line = first_code/64
last_line = (last_code+63)/64

# Display the code points.
(first_line...last_line).each do |line|
  print "%4X " % (line*64)

  8.times do |bundle|
    print ' '
    start = line*64 + bundle*8
    finish = start+8

    (start...finish).each do |code|
      if code.between?(first_code, last_code) && code >= 32
        begin
          print code.chr(Encoding::UTF_8)
        rescue RangeError
          print 'E'
        end
      else
        print ' '
      end

    end
  end

  puts
end
